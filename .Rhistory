getwd()
getwd()
install.packages("BH")
install.packages("rCharts")
install.packages("markdown")
install.packages("data.table")
install.packages("dplyr")
install.packages("DT")
shiny::runApp('R code/Programming assignment/Shiny')
install.packages("rCharts")
runApp('R code/Programming assignment/Shiny_by_other')
install.packages("rCharts")
x=c(1 2 3)
c(1 2 3)
c(1,2)
x=c(1,2)
y=c(3,4)
lm(y~x)
lm(y~x)$coef
lm(y~x)$coef[1]
lm(y~x)$coef[1][1]
lm(y~x)$coef[[1]]
runApp('R code/Programming assignment/Shiny_by_other')
a="1,2,3"
?gsub
grep("," a)
grep(",", a)
grep(",", a)[2]
grep(",", a)
a="1, 2, 3"
grep(",", a)
grep("[a-z]", letters)
letters
grepl(",", a)
regexpr(",", a)
gregexpr(",", a)
strsplit(",", a)
strsplit(a, ",")
strsplit(a, ",")
a="1,2,3"
strsplit(a, ",")
as.numeric(strsplit(a, ","))
x=c(1,2,3)
y=c(3,9,7)
lm(y~x)
strsplit(a, ",")
strsplit(a, ",")[1]
strsplit(a, ",")[[1]]
class(strsplit(a, ",")[[1]])
as.numeric(strsplit(a, ",")[[1]])
lm(y~x)
lm(y~x)$coef
lm(y~x)$coef[1]
lm(y~x)$coef[[1]]
lm(y~x)$coef[[2]]
runApp('R code/Programming assignment/Shiny_by_other')
runApp('R code/Programming assignment/Shiny_by_other')
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny_by_other')
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny_by_other')
runApp('R code/Programming assignment/Shiny_by_other')
runApp('R code/Programming assignment/Shiny')
shiny::runApp('R code/Programming assignment/Shiny_by_other')
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
lm(y~x)["coef"][[1]]
y=c(1,2,3)
x=c(1,2,3)
lm(y~x)["coef"][[1]]
lm(y~x)["coef"]
lm(y~x)$coef
lm(y~x)["coef"]
lm(y~x)[["coef"]]
lm(y~x)
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
lm(y~x)$coef
plot(lm(y~x))
plot(lm(y~x)$coef)
plot(lm(y~x))
lm(y~x)["coef"]
lm(y~x)["coefficients"]
lm(y~x)["coefficients"][1]
lm(y~x)["coefficients"][[1]]
lm(y~x)["coefficients"][1]
lm(y~x)["coefficients"][[1]]
lm(y~x)["coefficients"]
lm(y~x)["coefficients"][1][[1]]
lm(y~x)["coefficients"][1]
lm(y~x)["coefficients"][1]
lm(y~x)["coefficients"][[1]]
class(lm(y~x)["coefficients"][[1]])
lm(y~x)["coefficients"][1]
lm(y~x)["coefficients"][[1]]
lm(y~x)["coefficients"][[1]][1]
lm(y~x)["coefficients"][[1]][[1]]
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
a="1,2,3"
strsplit(a,",")
strsplit(a,",")[[1]]
runApp('R code/Programming assignment/Shiny')
plot(lm(y~x))
plot(lm(y~x),type="l")
plot(lm(y~x))
plot(x,y)
abline(lm(y~x))
fit = lm(y~x)
fit$xlevels
summary(fit)
fit$fitted.values
fit$fitted.values[1]
fit$fitted.values[[1]]
a=plot(x,y)
plot(a)
fit["fitted.values"]
fit["fitted.values"][1]
fit["fitted.values"][[1]]
fit["fitted.values"][[1]][1,]
fit["fitted.values"][[1]][1]
fit["fitted.values"][[1]][,1]
fit["fitted.values"][[1]][1]
fit["fitted.values"][[1]][2]
fit["fitted.values"][[1]][2]
fit["fitted.values"][1]
fit["fitted.values"][1,]
fit["fitted.values"][,1]
fit["fitted.values"][[1]]
class(fit["fitted.values"][[1]])
as.dataframe(fit["fitted.values"][[1]])
as.data.frame(fit["fitted.values"][[1]])
as.data.frame(fit["fitted.values"][[1]])[1]
fit["fitted.values"][[1]]
as.data.frame(a=fit["fitted.values"][[1]])[1]
fit["fitted.values"][[1]]
fit$fitted.values
fit["fitted.values"][[1]]
fit["fitted.values"][[1]][1]
fit["fitted.values"][[1]][,]
fit["fitted.values"][[1]][,1]
fit["fitted.values"][[1]][12]
fit["fitted.values"][[1]][[1]]
fit["fitted.values"][[1]][[2]]
fit["fitted.values"][[1]][[4]]
fit["fitted.values"][[1]][[3]]
dim(fit["fitted.values"][[1]])
ui <- fixedPage(
plotOutput('myplot'),
sliderInput('myslider', 'Steps', min=1, max=3, value=1, animate=animationOptions())
)
server <- function(input, output, session) {
x <- 1:100/100
y <- x + rnorm(100, 0, 0.2)
pfs <- list(
function() plot(x, y) ,
function() abline(lm(y~x)),
function() title(main='Fitted line plot')
)
output$myplot <- renderPlot({
for (i in 1:input$myslider) pfs[[i]]()
})
}
runApp(list(ui=ui, server=server)
)
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
install.packages("plotrix")
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny')
plot(x,y)
xlab="X"
ylab="X"
runApp('R code/Programming assignment/Shiny')
runApp('R code/Programming assignment/Shiny_by_other3')
install.packages("plotrix")
install.packages("plotrix")
runApp('R code/Programming assignment/Shiny_by_other3')
install.packages("devtools")
install_github("slidify", "slidifyLibraries", "ramnathv")
library(devtools)
install_github("slidify", "slidifyLibraries", "ramnathv")
install_github("slidifyLibraries")
install_github("slidifyLibraries", "ramnathv")
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
install_github("slidify", "ramnathv")
install_github('slidify', 'ramnathv')
install_github("ramnathv/slidify")
library(devtools)
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs)
devtools::install_github(pkgs)
install.packages("knitr")
install.packages("parser")
install.packages("parser")
library(devtools)
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs)
install_github("ramnathv/slidify")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
getwd()
install.packages("slidify-master.zip", lib=getwd(),repos=NULL)
library(slidify)
install.packages("slidify-master.zip", lib=getwd(),repos=NULL)
install.packages("slidify-master.zip", lib=getwd())
devtools::install_github(pkgs)
install.packages("stringi")
devtools::install_github(pkgs)
library(slidify)
getwd()
setwd("~/R code/Programming assignment/Slidify")
author("Peter Sz")
shiny::runApp('~/R code/Programming assignment/Shiny')
getwd()
publish(user = "szingerpeter", repo = "ddp")
publish(user = "szingerpeter", repo = "ddp")
install.packages('rsconnect')
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='szingerpeter', token='83D7657D8BE6DEABA5BF4F88F6650D6B', secret='ohuaSmuTDVEYhGcqJ/DD+YsIdrJF5XSMuHQqksIX')
getwd()
"C:/Users/Peter/Documents/R code/Programming assignment/Shiny"
rsconnect::deployApp(
"C:/Users/Peter/Documents/R code/Programming assignment/Shiny")
